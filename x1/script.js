(function() {
  // General Variables
  var Particle, particleCount, particles, sketch, z;

  sketch = Sketch.create();

  particles = [];

  particleCount = 750;

  sketch.mouse.x = sketch.width / 2;

  sketch.mouse.y = sketch.height / 2;

  sketch.strokeStyle = 'hsla(200, 50%, 50%, .4)';

  sketch.globalCompositeOperation = 'lighter';

  
  // Particle Constructor
  Particle = function() {
    this.x = random(sketch.width);
    this.y = random(sketch.height, sketch.height * 2);
    this.vx = 0;
    this.vy = -random(1, 10) / 5;
    this.radius = this.baseRadius = 1;
    this.maxRadius = 50;
    this.threshold = 150;
    return this.hue = random(180, 240);
  };

  // Particle Prototype
  Particle.prototype = {
    update: function() {
      var dist, distx, disty, radius;
      // Determine Distance From Mouse
      distx = this.x - sketch.mouse.x;
      disty = this.y - sketch.mouse.y;
      dist = sqrt(distx * distx + disty * disty);
      
      // Set Radius
      if (dist < this.threshold) {
        radius = this.baseRadius + ((this.threshold - dist) / this.threshold) * this.maxRadius;
        this.radius = radius > this.maxRadius ? this.maxRadius : radius;
      } else {
        this.radius = this.baseRadius;
      }
      
      // Adjust Velocity
      this.vx += (random(100) - 50) / 1000;
      this.vy -= random(1, 20) / 10000;
      
      // Apply Velocity
      this.x += this.vx;
      this.y += this.vy;
      
      // Check Bounds   
      if (this.x < -this.maxRadius || this.x > sketch.width + this.maxRadius || this.y < -this.maxRadius) {
        this.x = random(sketch.width);
        this.y = random(sketch.height + this.maxRadius, sketch.height * 2);
        this.vx = 0;
        return this.vy = -random(1, 10) / 5;
      }
    },
    render: function() {
      sketch.beginPath();
      sketch.arc(this.x, this.y, this.radius, 0, TWO_PI);
      sketch.closePath();
      sketch.fillStyle = 'hsla(' + this.hue + ', 60%, 40%, .35)';
      sketch.fill();
      return sketch.stroke();
    }
  };

  // Create Particles
  z = particleCount;

  while (z--) {
    particles.push(new Particle());
  }

  // Sketch Clear
  sketch.clear = function() {
    return sketch.clearRect(0, 0, sketch.width, sketch.height);
  };

  
  // Sketch Update
  sketch.update = function() {
    var i, results;
    i = particles.length;
    results = [];
    while (i--) {
      results.push(particles[i].update());
    }
    return results;
  };

  // Sketch Draw
  sketch.draw = function() {
    var i, results;
    i = particles.length;
    results = [];
    while (i--) {
      results.push(particles[i].render());
    }
    return results;
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiPGFub255bW91cz4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQW1CO0VBQUE7QUFBQSxNQUFBLFFBQUEsRUFBQSxhQUFBLEVBQUEsU0FBQSxFQUFBLE1BQUEsRUFBQTs7RUFDbkIsTUFBQSxHQUFTLE1BQU0sQ0FBQyxNQUFQLENBQUE7O0VBQ1QsU0FBQSxHQUFZOztFQUNaLGFBQUEsR0FBZ0I7O0VBQ2hCLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBYixHQUFpQixNQUFNLENBQUMsS0FBUCxHQUFlOztFQUNoQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQWIsR0FBaUIsTUFBTSxDQUFDLE1BQVAsR0FBZ0I7O0VBQ2pDLE1BQU0sQ0FBQyxXQUFQLEdBQXFCOztFQUNyQixNQUFNLENBQUMsd0JBQVAsR0FBa0MsVUFQZjs7OztFQVVuQixRQUFBLEdBQVcsUUFBQSxDQUFBLENBQUE7SUFDVCxJQUFJLENBQUMsQ0FBTCxHQUFTLE1BQUEsQ0FBUSxNQUFNLENBQUMsS0FBZjtJQUNULElBQUksQ0FBQyxDQUFMLEdBQVMsTUFBQSxDQUFRLE1BQU0sQ0FBQyxNQUFmLEVBQXVCLE1BQU0sQ0FBQyxNQUFQLEdBQWdCLENBQXZDO0lBQ1QsSUFBSSxDQUFDLEVBQUwsR0FBVTtJQUNWLElBQUksQ0FBQyxFQUFMLEdBQVUsQ0FBQyxNQUFBLENBQVEsQ0FBUixFQUFXLEVBQVgsQ0FBRCxHQUFtQjtJQUM3QixJQUFJLENBQUMsTUFBTCxHQUFjLElBQUksQ0FBQyxVQUFMLEdBQWtCO0lBQ2hDLElBQUksQ0FBQyxTQUFMLEdBQWlCO0lBQ2pCLElBQUksQ0FBQyxTQUFMLEdBQWlCO1dBQ2pCLElBQUksQ0FBQyxHQUFMLEdBQVcsTUFBQSxDQUFRLEdBQVIsRUFBYSxHQUFiO0VBUkYsRUFWUTs7O0VBcUJuQixRQUFRLENBQUMsU0FBVCxHQUNFO0lBQUEsTUFBQSxFQUFRLFFBQUEsQ0FBQSxDQUFBO0FBQ1YsVUFBQSxJQUFBLEVBQUEsS0FB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QUM7QUFDZDtXQUE4QixDQUFBLEVBQTlCO21CQUFBLFNBQVMsQ0FBRSxDQUFGLENBQUssQ0FBQyxNQUFmLENBQUE7SUFBQSxDQUFBOztFQUZjLEVBbkVHOzs7RUF3RW5CLE1BQU0sQ0FBQyxJQUFQLEdBQWMsUUFBQSxDQUFBLENBQUE7QUFDZCxRQUFBLENBQUEsRUFBQTtJQUFFLENBQUEsR0FBSSxTQUFTLENBQUM7QUFDZDtXQUE4QixDQUFBLEVBQTlCO21CQUFBLFNBQVMsQ0FBRSxDQUFGLENBQUssQ0FBQyxNQUFmLENBQUE7SUFBQSxDQUFBOztFQUZZO0FBeEVLIiwic291cmNlc0NvbnRlbnQiOlsiIyBHZW5lcmFsIFZhcmlhYmxlc1xuc2tldGNoID0gU2tldGNoLmNyZWF0ZSgpXG5wYXJ0aWNsZXMgPSBbXVxucGFydGljbGVDb3VudCA9IDc1MFxuc2tldGNoLm1vdXNlLnggPSBza2V0Y2gud2lkdGggLyAyXG5za2V0Y2gubW91c2UueSA9IHNrZXRjaC5oZWlnaHQgLyAyXG5za2V0Y2guc3Ryb2tlU3R5bGUgPSAnaHNsYSgyMDAsIDUwJSwgNTAlLCAuNCknXG5za2V0Y2guZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uID0gJ2xpZ2h0ZXInXG4gIFxuIyBQYXJ0aWNsZSBDb25zdHJ1Y3RvclxuUGFydGljbGUgPSAtPlxuICB0aGlzLnggPSByYW5kb20oIHNrZXRjaC53aWR0aCApIFxuICB0aGlzLnkgPSByYW5kb20oIHNrZXRjaC5oZWlnaHQsIHNrZXRjaC5oZWlnaHQgKiAyIClcbiAgdGhpcy52eCA9IDBcbiAgdGhpcy52eSA9IC1yYW5kb20oIDEsIDEwICkgLyA1XG4gIHRoaXMucmFkaXVzID0gdGhpcy5iYXNlUmFkaXVzID0gMVxuICB0aGlzLm1heFJhZGl1cyA9IDUwICBcbiAgdGhpcy50aHJlc2hvbGQgPSAxNTBcbiAgdGhpcy5odWUgPSByYW5kb20oIDE4MCwgMjQwIClcblxuIyBQYXJ0aWNsZSBQcm90b3R5cGVcblBhcnRpY2xlLnByb3RvdHlwZSA9XG4gIHVwZGF0ZTogLT5cbiAgICAjIERldGVybWluZSBEaXN0YW5jZSBGcm9tIE1vdXNlXG4gICAgZGlzdHggPSB0aGlzLnggLSBza2V0Y2gubW91c2UueFxuICAgIGRpc3R5ID0gdGhpcy55IC0gc2tldGNoLm1vdXNlLnlcbiAgICBkaXN0ID0gc3FydCggZGlzdHggKiBkaXN0eCArIGRpc3R5ICogZGlzdHkgKVxuICAgIFxuICAgICMgU2V0IFJhZGl1c1xuICAgIGlmIGRpc3QgPCB0aGlzLnRocmVzaG9sZFxuICAgICAgcmFkaXVzID0gdGhpcy5iYXNlUmFkaXVzICsgKCAoIHRoaXMudGhyZXNob2xkIC0gZGlzdCApIC8gdGhpcy50aHJlc2hvbGQgKSAqIHRoaXMubWF4UmFkaXVzXG4gICAgICB0aGlzLnJhZGl1cyA9IGlmIHJhZGl1cyA+IHRoaXMubWF4UmFkaXVzIHRoZW4gdGhpcy5tYXhSYWRpdXMgZWxzZSByYWRpdXNcbiAgICBlbHNlXG4gICAgICB0aGlzLnJhZGl1cyA9IHRoaXMuYmFzZVJhZGl1c1xuICAgICAgICBcbiAgICAjIEFkanVzdCBWZWxvY2l0eVxuICAgIHRoaXMudnggKz0gKCByYW5kb20oIDEwMCApIC0gNTAgKSAvIDEwMDBcbiAgICB0aGlzLnZ5IC09IHJhbmRvbSggMSwgMjAgKSAvIDEwMDAwXG4gICAgICBcbiAgICAjIEFwcGx5IFZlbG9jaXR5XG4gICAgdGhpcy54ICs9IHRoaXMudnhcbiAgICB0aGlzLnkgKz0gdGhpcy52eVxuICAgICAgXG4gICAgIyBDaGVjayBCb3VuZHMgICBcbiAgICBpZiB0aGlzLnggPCAtIHRoaXMubWF4UmFkaXVzIHx8IHRoaXMueCA+IHNrZXRjaC53aWR0aCArIHRoaXMubWF4UmFkaXVzIHx8IHRoaXMueSA8IC0gdGhpcy5tYXhSYWRpdXNcbiAgICAgIHRoaXMueCA9IHJhbmRvbSggc2tldGNoLndpZHRoICkgICAgICBcbiAgICAgIHRoaXMueSA9IHJhbmRvbSggc2tldGNoLmhlaWdodCArIHRoaXMubWF4UmFkaXVzLCBza2V0Y2guaGVpZ2h0ICogMiApXG4gICAgICB0aGlzLnZ4ID0gMFxuICAgICAgdGhpcy52eSA9IC1yYW5kb20oIDEsIDEwICkgLyA1XG4gIHJlbmRlcjogLT5cbiAgICBza2V0Y2guYmVnaW5QYXRoKClcbiAgICBza2V0Y2guYXJjKCB0aGlzLngsIHRoaXMueSwgdGhpcy5yYWRpdXMsIDAsIFRXT19QSSApXG4gICAgc2tldGNoLmNsb3NlUGF0aCgpXG4gICAgc2tldGNoLmZpbGxTdHlsZSA9ICdoc2xhKCcgKyB0aGlzLmh1ZSArICcsIDYwJSwgNDAlLCAuMzUpJ1xuICAgIHNrZXRjaC5maWxsKClcbiAgICBza2V0Y2guc3Ryb2tlKClcblxuIyBDcmVhdGUgUGFydGljbGVzXG56ID0gcGFydGljbGVDb3VudFxud2hpbGUgei0tXG4gIHBhcnRpY2xlcy5wdXNoKCBuZXcgUGFydGljbGUoKSApXG5cbiMgU2tldGNoIENsZWFyXG5za2V0Y2guY2xlYXIgPSAtPlxuICBza2V0Y2guY2xlYXJSZWN0KCAwLCAwLCBza2V0Y2gud2lkdGgsIHNrZXRjaC5oZWlnaHQgKVxuICBcbiMgU2tldGNoIFVwZGF0ZVxuc2tldGNoLnVwZGF0ZSA9IC0+XG4gIGkgPSBwYXJ0aWNsZXMubGVuZ3RoXG4gIHBhcnRpY2xlc1sgaSBdLnVwZGF0ZSgpIHdoaWxlIGktLVxuXG4jIFNrZXRjaCBEcmF3XG5za2V0Y2guZHJhdyA9IC0+ICBcbiAgaSA9IHBhcnRpY2xlcy5sZW5ndGhcbiAgcGFydGljbGVzWyBpIF0ucmVuZGVyKCkgd2hpbGUgaS0tXG4iXX0=
//# sourceURL=coffeescript